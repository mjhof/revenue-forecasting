# extract year and quarter from Name column
df <- df %>% mutate(year = as.integer(str_extract(Name, "\\s.*")),
quarter = as.integer(substr(Name, 2, 3))) %>% select(-Name)
# remove rows with missing quarter values
df <- df %>% filter(interim_sales != "NA")
df$interim_sales <- as.integer(df$interim_sales)
# remove variable column
df <- df %>% select(-variable)
return(df)
}
# apply function to all 4 quarters
df_sales <- map_dfr(1:4, load_transform_sales_quarter)
cat(
paste(
"Transformed interim sales dataframe contains ",
nrow(df_sales),
" records for ",
n_distinct(df_sales$company),
" companies from year ",
min(df_sales$year),
" to ",
max(df_sales$year),
".",
sep = ""
)
)
head(df_sales)
df %>%
mutate(
company = str_trim(str_extract(Name, "^.+?(?=\\s-\\s)")),
variable = str_trim(str_extract(Name, "([^-]+$)"))
)
# parse company and variable
df %>%
mutate(
company = str_trim(str_extract(Name, "^.+?(?=\\s-\\s)")),
variable = str_trim(str_extract(Name, "([^-]+$)"))
) %>% select(-1)
# %>% pivot_longer(
#       cols = -c(company, variable),
#       names_to = "Name",
#       values_to = "interim_sales"
#     )
# parse company and variable
df %>%
mutate(
company = str_trim(str_extract(Name, "^.+?(?=\\s-\\s)")),
variable = str_trim(str_extract(Name, "([^-]+$)"))
) %>% select(-1) %>% pivot_longer(cols = -c(company, variable),
names_to = "variable",
values_to = "values")
# parse company and variable
df %>%
mutate(
company = str_trim(str_extract(Name, "^.+?(?=\\s-\\s)")),
variable_name = str_trim(str_extract(Name, "([^-]+$)"))
) %>% select(-1) %>% pivot_longer(cols = -c(company, variable),
names_to = "variable",
values_to = "values")
# read and transpose
df <- read_excel(RAW_DATA_PATH, sheet = "Balance Sheet")
df <- t(df) %>%
as.data.frame()  %>%
rownames_to_column("Name")
colnames(df) <- df[1, ] # set correct header
df <- slice(df, -1) # and remove from rows
# remove entries starting with #ERROR
df <- df[!startsWith(df$Name, "#ERROR"), ]
# add space to names of companies without space before the "-"
# without this, we will later have difficulties in correctly parsing the variable names
company_names_without_space <- c(
"THERMO FISHER SCIENTIFIC",
"ADOBE (NAS)",
"CONSTELLATION BRANDS 'A'",
"WALGREENS BOOTS ALLIANCE",
"LYONDELLBASELL INDS.CL.A",
"CITIZENS FINANCIAL GROUP",
"MID-AMER.APT COMMUNITIES",
"TERADYNE (XSC)",
"UNITED AIRLINES HOLDINGS",
"ALLIANT ENERGY (XSC)",
"CBOE GLOBAL MARKETS(BTS)",
"BIO-RAD LABORATORIES 'A'",
"UNIVERSAL HEALTH SVS.'B'",
"NEWELL BRANDS (XSC)"
)
company_names_without_space <- company_names_without_space[!duplicated(company_names_without_space)]
# parse company and variable
df <- df %>%
mutate(
company = str_trim(str_extract(Name, "^.+?(?=\\s-\\s)")),
variable_name = str_trim(str_extract(Name, "([^-]+$)"))
)
df
df %>% select(-1) %>% pivot_longer(cols = -c(company, variable_name),
names_to = "variable",
values_to = "values")
# %>% pivot_longer(
#       cols = -c(company, variable),
#       names_to = "Name",
#       values_to = "interim_sales"
#     )
df %>% select(-1) %>% pivot_longer(cols = -c(company, variable_name),
names_to = "year",
values_to = "values")
# %>% pivot_longer(
#       cols = -c(company, variable),
#       names_to = "Name",
#       values_to = "interim_sales"
#     )
df %>% select(-1) %>% pivot_longer(cols = -c(company, variable_name),
names_to = "year",
values_to = "value")
# %>% pivot_longer(
#       cols = -c(company, variable),
#       names_to = "Name",
#       values_to = "interim_sales"
#     )
# read and transpose
df <- read_excel(RAW_DATA_PATH, sheet = "Balance Sheet")
df <- t(df) %>%
as.data.frame()  %>%
rownames_to_column("Name")
colnames(df) <- df[1, ] # set correct header
df <- slice(df, -1) # and remove from rows
# remove entries starting with #ERROR
df <- df[!startsWith(df$Name, "#ERROR"), ]
# add space to names of companies without space before the "-"
# without this, we will later have difficulties in correctly parsing the variable names
company_names_without_space <- c(
"THERMO FISHER SCIENTIFIC",
"ADOBE (NAS)",
"CONSTELLATION BRANDS 'A'",
"WALGREENS BOOTS ALLIANCE",
"LYONDELLBASELL INDS.CL.A",
"CITIZENS FINANCIAL GROUP",
"MID-AMER.APT COMMUNITIES",
"TERADYNE (XSC)",
"UNITED AIRLINES HOLDINGS",
"ALLIANT ENERGY (XSC)",
"CBOE GLOBAL MARKETS(BTS)",
"BIO-RAD LABORATORIES 'A'",
"UNIVERSAL HEALTH SVS.'B'",
"NEWELL BRANDS (XSC)"
)
company_names_without_space <- company_names_without_space[!duplicated(company_names_without_space)]
# parse company and variable
df <- df %>%
mutate(
company = str_trim(str_extract(Name, "^.+?(?=\\s-\\s)")),
variable_name = str_trim(str_extract(Name, "([^-]+$)"))
)
# pivot data frame to company, variable_name, year, value format
df <- df %>% select(-1) %>% pivot_longer(cols = -c(company, variable_name),
names_to = "year",
values_to = "value")
df
?pivot_wider
df %>% pivot_longer()
df %>% pivot_longer(id_cols = c(company, year))
df %>% pivot_wider(id_cols = c(company, year))
df %>% pivot_wider(id_cols = c(company, year), names_from = variable_name)
# read and transpose
df <- read_excel(RAW_DATA_PATH, sheet = "Balance Sheet")
df <- t(df) %>%
as.data.frame()  %>%
rownames_to_column("Name")
colnames(df) <- df[1, ] # set correct header
df <- slice(df, -1) # and remove from rows
# remove entries starting with #ERROR
df <- df[!startsWith(df$Name, "#ERROR"), ]
# add space to names of companies without space before the "-"
# without this, we will later have difficulties in correctly parsing the variable names
company_names_without_space <- c(
"THERMO FISHER SCIENTIFIC",
"ADOBE (NAS)",
"CONSTELLATION BRANDS 'A'",
"WALGREENS BOOTS ALLIANCE",
"LYONDELLBASELL INDS.CL.A",
"CITIZENS FINANCIAL GROUP",
"MID-AMER.APT COMMUNITIES",
"TERADYNE (XSC)",
"UNITED AIRLINES HOLDINGS",
"ALLIANT ENERGY (XSC)",
"CBOE GLOBAL MARKETS(BTS)",
"BIO-RAD LABORATORIES 'A'",
"UNIVERSAL HEALTH SVS.'B'",
"NEWELL BRANDS (XSC)"
)
company_names_without_space <- company_names_without_space[!duplicated(company_names_without_space)]
# parse company and variable
df <- df %>%
mutate(
company = str_trim(str_extract(Name, "^.+?(?=\\s-\\s)")),
variable_name = str_trim(str_extract(Name, "([^-]+$)"))
)
# pivot data frame to company, variable_name, year, value format
# and cast to numeric values to integer
df <- df %>% select(-1) %>% pivot_longer(cols = -c(company, variable_name),
names_to = "year",
values_to = "value") %>% mutate(year = as.integer(year), value = as.integer(value))
# cast
df
df %>% pivot_wider(id_cols = c(company, year), names_from = variable_name)
load_transform_balance_sheet <- function() {
# read and transpose
df <- read_excel(RAW_DATA_PATH, sheet = "Balance Sheet")
df <- t(df) %>%
as.data.frame()  %>%
rownames_to_column("Name")
colnames(df) <- df[1,] # set correct header
df <- slice(df,-1) # and remove from rows
# remove entries starting with #ERROR
df <- df[!startsWith(df$Name, "#ERROR"),]
# add space to names of companies without space before the "-"
# without this, we will later have difficulties in correctly parsing the variable names
company_names_without_space <- c(
"THERMO FISHER SCIENTIFIC",
"ADOBE (NAS)",
"CONSTELLATION BRANDS 'A'",
"WALGREENS BOOTS ALLIANCE",
"LYONDELLBASELL INDS.CL.A",
"CITIZENS FINANCIAL GROUP",
"MID-AMER.APT COMMUNITIES",
"TERADYNE (XSC)",
"UNITED AIRLINES HOLDINGS",
"ALLIANT ENERGY (XSC)",
"CBOE GLOBAL MARKETS(BTS)",
"BIO-RAD LABORATORIES 'A'",
"UNIVERSAL HEALTH SVS.'B'",
"NEWELL BRANDS (XSC)"
)
company_names_without_space <-
company_names_without_space[!duplicated(company_names_without_space)]
# parse company and variable
df <- df %>%
mutate(company = str_trim(str_extract(Name, "^.+?(?=\\s-\\s)")),
variable_name = str_trim(str_extract(Name, "([^-]+$)")))
# pivot data frame to company, variable_name, year, value format
# and cast to numeric values to integer
df <-
df %>% select(-1) %>% pivot_longer(
cols = -c(company, variable_name),
names_to = "year",
values_to = "value"
) %>% mutate(year = as.integer(year), value = as.integer(value))
# pivot data frame to wide format
df %>% pivot_wider(id_cols = c(company, year), names_from = variable_name)
return(df)
}
df_balance_sheet <- load_transform_balance_sheet()
paste(
"Transformed interim sales data frame contains ",
nrow(df_balance_sheet),
" records for ",
n_distinct(df_balance_sheet$company),
" companies from year ",
min(df_balance_sheet$year),
" to ",
max(df_balance_sheet$year),
".",
sep = ""
)
df_balance_sheet$company
cat(
paste(
"Transformed interim sales data frame contains ",
nrow(df_balance_sheet),
" records for ",
n_distinct(df_balance_sheet$company),
" companies from year ",
min(df_balance_sheet$year),
" to ",
max(df_balance_sheet$year),
".",
sep = ""
)
)
unique(df_balance_sheet$company)
?str_replace
load_transform_balance_sheet <- function() {
# read and transpose
df <- read_excel(RAW_DATA_PATH, sheet = "Balance Sheet")
df <- t(df) %>%
as.data.frame()  %>%
rownames_to_column("Name")
colnames(df) <- df[1,] # set correct header
df <- slice(df,-1) # and remove from rows
# remove entries starting with #ERROR
df <- df[!startsWith(df$Name, "#ERROR"),]
cat(colnames(df))
# parse company and variable
df <- df %>%
mutate(company = str_trim(str_extract(Name, "^.+?(?=\\s-\\s)")),
variable_name = str_trim(str_extract(Name, "([^-]+$)")))
# pivot data frame to company, variable_name, year, value format
# and cast to numeric values to integer
df <-
df %>% select(-1) %>% pivot_longer(
cols = -c(company, variable_name),
names_to = "year",
values_to = "value"
) %>% mutate(year = as.integer(year), value = as.integer(value))
# pivot data frame to wide format
df %>% pivot_wider(id_cols = c(company, year), names_from = variable_name)
return(df)
}
df_balance_sheet <- load_transform_balance_sheet()
cat(
paste(
"Transformed interim sales data frame contains ",
nrow(df_balance_sheet),
" records for ",
n_distinct(df_balance_sheet$company),
" companies from year ",
min(df_balance_sheet$year),
" to ",
max(df_balance_sheet$year),
".",
sep = ""
)
)
load_transform_balance_sheet <- function() {
# read and transpose
df <- read_excel(RAW_DATA_PATH, sheet = "Balance Sheet")
df <- t(df) %>%
as.data.frame()  %>%
rownames_to_column("Name")
colnames(df) <- df[1,] # set correct header
df <- slice(df,-1) # and remove from rows
# remove entries starting with #ERROR
df <- df[!startsWith(df$Name, "#ERROR"),]
# add space to company names
df <- df %>% mutate(Name, add_space_to_company_names)
# parse company and variable
df <- df %>%
mutate(company = str_trim(str_extract(Name, "^.+?(?=\\s-\\s)")),
variable_name = str_trim(str_extract(Name, "([^-]+$)")))
# pivot data frame to company, variable_name, year, value format
# and cast to numeric values to integer
df <-
df %>% select(-1) %>% pivot_longer(
cols = -c(company, variable_name),
names_to = "year",
values_to = "value"
) %>% mutate(year = as.integer(year), value = as.integer(value))
# pivot data frame to wide format
df %>% pivot_wider(id_cols = c(company, year), names_from = variable_name)
return(df)
}
df_balance_sheet <- load_transform_balance_sheet()
# add space to names of companies without space before the "-"
# without this, we will later have difficulties in correctly parsing the variable names
company_names_without_space <- c(
"THERMO FISHER SCIENTIFIC",
"ADOBE (NAS)",
"CONSTELLATION BRANDS 'A'",
"WALGREENS BOOTS ALLIANCE",
"LYONDELLBASELL INDS.CL.A",
"CITIZENS FINANCIAL GROUP",
"MID-AMER.APT COMMUNITIES",
"TERADYNE (XSC)",
"UNITED AIRLINES HOLDINGS",
"ALLIANT ENERGY (XSC)",
"CBOE GLOBAL MARKETS(BTS)",
"BIO-RAD LABORATORIES 'A'",
"UNIVERSAL HEALTH SVS.'B'",
"NEWELL BRANDS (XSC)"
)
company_names_without_space <-
company_names_without_space[!duplicated(company_names_without_space)]
add_space_to_company_names <-
function(name, c_names = company_names_without_space) {
for (c_name in c_names) {
name = str_replace(name, c_name, c_name + " ")
}
return(name)
}
load_transform_balance_sheet <- function() {
# read and transpose
df <- read_excel(RAW_DATA_PATH, sheet = "Balance Sheet")
df <- t(df) %>%
as.data.frame()  %>%
rownames_to_column("Name")
colnames(df) <- df[1,] # set correct header
df <- slice(df,-1) # and remove from rows
# remove entries starting with #ERROR
df <- df[!startsWith(df$Name, "#ERROR"),]
# add space to company names
df <- df %>% mutate(Name, add_space_to_company_names)
# parse company and variable
df <- df %>%
mutate(company = str_trim(str_extract(Name, "^.+?(?=\\s-\\s)")),
variable_name = str_trim(str_extract(Name, "([^-]+$)")))
# pivot data frame to company, variable_name, year, value format
# and cast to numeric values to integer
df <-
df %>% select(-1) %>% pivot_longer(
cols = -c(company, variable_name),
names_to = "year",
values_to = "value"
) %>% mutate(year = as.integer(year), value = as.integer(value))
# pivot data frame to wide format
df %>% pivot_wider(id_cols = c(company, year), names_from = variable_name)
return(df)
}
df_balance_sheet <- load_transform_balance_sheet()
load_transform_balance_sheet <- function() {
# read and transpose
df <- read_excel(RAW_DATA_PATH, sheet = "Balance Sheet")
df <- t(df) %>%
as.data.frame()  %>%
rownames_to_column("Name")
colnames(df) <- df[1,] # set correct header
df <- slice(df,-1) # and remove from rows
# remove entries starting with #ERROR
df <- df[!startsWith(df$Name, "#ERROR"),]
# add space to company names
df <- df %>% mutate(Name = add_space_to_company_names(Name))
# parse company and variable
df <- df %>%
mutate(company = str_trim(str_extract(Name, "^.+?(?=\\s-\\s)")),
variable_name = str_trim(str_extract(Name, "([^-]+$)")))
# pivot data frame to company, variable_name, year, value format
# and cast to numeric values to integer
df <-
df %>% select(-1) %>% pivot_longer(
cols = -c(company, variable_name),
names_to = "year",
values_to = "value"
) %>% mutate(year = as.integer(year), value = as.integer(value))
# pivot data frame to wide format
df %>% pivot_wider(id_cols = c(company, year), names_from = variable_name)
return(df)
}
df_balance_sheet <- load_transform_balance_sheet()
str_replace("THERMO FISHER SCIENTIFIC- BORROWINGS REPAYABLE < 1 YEAR", "THERMO FISHER SCIENTIFIC", "THERMO FISHER SCIENTIFIC ")
str_replace("THERMO FISHER SCIENTIFIC- BORROWINGS REPAYABLE < 1 YEAR", "x", "THERMO FISHER SCIENTIFIC ")
cat(c_name, "\n")
add_space_to_company_names(c("THERMO FISHER SCIENTIFIC- BORROWINGS REPAYABLE < 1 YEAR"))
add_space_to_company_names <-
function(name, c_names = company_names_without_space) {
for (c_name in c_names) {
cat(c_name, "\n")
name = str_replace(name, c_name, paste0(c_name,  " "))
}
return(name)
}
add_space_to_company_names(c("THERMO FISHER SCIENTIFIC- BORROWINGS REPAYABLE < 1 YEAR"))
add_space_to_company_names <-
function(name, c_names = company_names_without_space) {
for (c_name in c_names) {
name = str_replace(name, c_name, paste0(c_name,  " "))
}
return(name)
}
df_balance_sheet <- load_transform_balance_sheet()
cat(
paste(
"Transformed interim sales data frame contains ",
nrow(df_balance_sheet),
" records for ",
n_distinct(df_balance_sheet$company),
" companies from year ",
min(df_balance_sheet$year),
" to ",
max(df_balance_sheet$year),
".",
sep = ""
)
)
unique(df_balance_sheet$company)
add_space_to_company_names <-
function(name, c_names = company_names_without_space) {
for (c_name in c_names) {
if (str_detect(name, c_name)){
name = str_replace(name, c_name, paste0(c_name,  " "))
}
}
return(name)
}
df_balance_sheet <- load_transform_balance_sheet()
str_detect("ADOBE (NAS)- TOT FIXED ASSETS-NET", "ADOBE (NAS)")
str_detect("ADOBE (NAS)- TOT FIXED ASSETS-NET", "ADOBE (NAS)")
str_detect("ADOBE (NAS)- TOT FIXED ASSETS-NET", "ADOBE (NAS)")
?str_detect
str_detect("ADOBE (NAS)- TOT FIXED ASSETS-NET", fixed("ADOBE (NAS)"))
str(str_detect("ADOBE (NAS)- TOT FIXED ASSETS-NET", fixed("ADOBE (NAS)")))
add_space_to_company_names <-
function(name, c_names = company_names_without_space) {
for (c_name in c_names) {
if (str_detect(name, fixed(c_name))){
name = str_replace(name, c_name, paste0(c_name,  " "))
}
}
return(name)
}
df_balance_sheet <- load_transform_balance_sheet()
add_space_to_company_names <-
function(name, c_names = company_names_without_space) {
for (c_name in c_names) {
if (str_detect(name, fixed(c_name)[1])){
name = str_replace(name, c_name, paste0(c_name,  " "))
}
}
return(name)
}
df_balance_sheet <- load_transform_balance_sheet()
df <- read_excel(RAW_DATA_PATH, sheet = "Balance Sheet")
df <- read_excel(RAW_DATA_PATH, sheet = "Balance Sheet")
cat("HI")
df <- read_excel(RAW_DATA_PATH, sheet = "Balance Sheet")
